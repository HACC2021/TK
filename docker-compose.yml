version: "3.9"

services:

   express-api:
      image: express-api
      restart: always
      build:
         context: ./server
         dockerfile: Dockerfile
      container_name: express_api
      volumes:
         - /app/node_modules
         - ./server:/app
      ports:
         - 5000:5000
      depends_on:
         - mongodb
      env_file:
         - ./.env
      environment:
         NODE_ENV: ${NODE_ENV}
         MONGO_URI: mongodb://${MONGO_ROOT_USERNAME}:${MONGO_ROOT_PASSWORD}@mongodb
      networks:
         - hacc-app
         
   mongodb:
      image: mongo
      restart: always
      ports:
         - 27017:27017
      environment:
         MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME} #test
         MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD} #password
      volumes:
         # for persistence storage
         - mongodb-data:/data/db
      networks:
         - hacc-app

   react-app:
      image: react-app
      restart: always
      build:
         context: ./client
         dockerfile: Dockerfile
      container_name: react_app
      # volumes:
      #    - ./app/node_modules
      #    - ./client:/app
      stdin_open: true
      ports:
         - 3000:3000
      depends_on:
         - express-api
      networks:
         - hacc-app
   
   #development use only
   # mongo-express:
   #    image: mongo-express
   #    depends_on:
   #          - mongodb
   #    ports:
   #       - 8081:8081
   #    environment:
   #       ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME}
   #       ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD}
   #       ME_CONFIG_MONGODB_SERVER: mongodb
   #       ME_CONFIG_BASICAUTH_USERNAME: admin
   #       ME_CONFIG_BASICAUTH_PASSWORD: admin123456
   #    volumes:
   #       - mongodb-data
   #    networks:
   #       - hacc-app

networks:
   hacc-app:
      driver: bridge

volumes:
   mongodb-data:
      driver: local
         

      